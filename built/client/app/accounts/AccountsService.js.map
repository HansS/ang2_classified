{"version":3,"sources":["accounts/AccountsService.ts"],"names":["AccountsService","AccountsService.constructor","AccountsService.login","AccountsService.register","AccountsService.logOut"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;YAWA;gBAKCA,yBAAmBA,IAAUA;oBAAVC,SAAIA,GAAJA,IAAIA,CAAMA;gBAAIA,CAACA;gBAGlCD,+BAAKA,GAALA,UAAMA,UAAUA;oBAEfE,IAAIA,KAAKA,GAAGA,WAAWA,GAAGA,UAAUA,CAACA,QAAQA,GAAGA,YAAYA,GAAGA,UAAUA,CAACA,QAAQA,CAACA;oBAEnFA,IAAIA,OAAOA,GAAGA,IAAIA,cAAOA,EAAEA,CAACA;oBAC5BA,OAAOA,CAACA,MAAMA,CAACA,cAAcA,EAAEA,mCAAmCA,CAACA,CAACA;oBAEpEA,MAAMA,CAACA,IAAIA,CAACA,IAAIA,CAACA,IAAIA,CAACA,kCAAkCA,EAAEA,KAAKA,EAAEA;wBAChEA,OAAOA,EAAEA,OAAOA;qBAChBA,CAACA;yBACDA,GAAGA,CAACA,UAAAA,GAAGA,IAAIA,OAAAA,GAAGA,CAACA,IAAIA,EAAEA,EAAVA,CAAUA,CAACA;yBACtBA,KAAKA,CAACA,IAAIA,CAACA,CAACA;gBAEdA,CAACA;gBACDF;;;;;;;;;;;;;;;;;;;;;mBAqBGA;gBAEHA,kCAAQA,GAARA,UAASA,QAAQA;oBAEhBG,IAAIA,QAAQA,GAAGA,WAAWA,GAAGA,QAAQA,CAACA,QAAQA,GAAGA,SAASA,GAAGA,QAAQA,CAACA,KAAKA,GAAGA,YAAYA,GAAGA,QAAQA,CAACA,QAAQA,CAACA;oBAE/GA,IAAIA,OAAOA,GAAGA,IAAIA,cAAOA,EAAEA,CAACA;oBAC5BA,OAAOA,CAACA,MAAMA,CAACA,cAAcA,EAAEA,mCAAmCA,CAACA,CAACA;oBAEpEA,MAAMA,CAACA,IAAIA,CAACA,IAAIA,CAACA,IAAIA,CAACA,qCAAqCA,EAAEA,QAAQA,EAAEA;wBACtEA,OAAOA,EAAEA,OAAOA;qBAChBA,CAACA;yBACDA,GAAGA,CAACA,UAAAA,GAAGA,IAAIA,OAAAA,GAAGA,CAACA,IAAIA,EAAEA,EAAVA,CAAUA,CAACA;yBACtBA,KAAKA,CAACA,IAAIA,CAACA,CAACA;gBAEdA,CAACA;gBAEDH,gCAAMA,GAANA;oBACCI,MAAMA,CAACA,IAAIA,CAACA,IAAIA,CAACA,GAAGA,CAACA,mCAAmCA,CAACA;yBACvDA,GAAGA,CAACA,UAAAA,GAAGA,IAAIA,OAAAA,GAAGA,CAACA,IAAIA,EAAEA,EAAVA,CAAUA,CAACA,CAACA;gBAC1BA,CAACA;gBA/DFJ;oBAACA,iBAAUA,EAAEA;;oCAiEZA;gBAADA,sBAACA;YAADA,CAjEA,AAiECA,IAAA;YAjED,6CAiEC,CAAA","file":"accounts/AccountsService.js","sourcesContent":["import {Injectable} from 'angular2/core'\nimport { Http, Headers, Response } from 'angular2/http';\n\n//Grab everything with import 'rxjs/Rx';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/delay';\nimport 'rxjs/add/operator/retry';\nimport 'rxjs/add/operator/timeout';\n\n@Injectable()\nexport class AccountsService {\n\n\tpublic postResponse;\n\n\tconstructor(public http: Http) { }\n\n\n\tlogin(loginCreds) {\n\t\t\n\t\tlet login = \"username=\" + loginCreds.username + \"&password=\" + loginCreds.password;\n\t\t\n\t\tvar headers = new Headers();\n\t\theaders.append('Content-Type', 'application/x-www-form-urlencoded');\n\n\t\treturn this.http.post('http://localhost:3000/user/login', login, {\n\t\t\theaders: headers\n\t\t})\n\t\t.map(res => res.json())\n\t\t.delay(3000);\n\n\t}\n\t/*login(loginCreds) {\n\n\t\tlet login = \"username=\" + loginCreds.username + \"&password=\" + loginCreds.password;\n\n\t\tvar headers = new Headers();\n\t\theaders.append('Content-Type', 'application/x-www-form-urlencoded');\n\n\t\treturn this.http.post('http://localhost:3000/user/login', login, {\n\t\t\theaders: headers,\n\t\t\ttimeout: 1000\n\t\t})\n\t\t.retry(2)\n\t\t.timeout(1000, new Error('checking for error.'))\n\t\t\n\t\t.map(res => res.json())\n\t\t.delay(2000)\n\t\t.subscribe(\n          (data) => resolve(data.json()),\n          (err) => reject(err)\n        );;\n\n\t}*/\n\n\tregister(regCreds) {\n\n\t\tlet register = \"username=\" + regCreds.username + \"&email=\" + regCreds.email + \"&password=\" + regCreds.password;\n\t\t\n\t\tvar headers = new Headers();\n\t\theaders.append('Content-Type', 'application/x-www-form-urlencoded');\n\n\t\treturn this.http.post('http://localhost:3000/user/register', register, {\n\t\t\theaders: headers\n\t\t})\n\t\t.map(res => res.json())\n\t\t.delay(3000);\n\n\t}\n\n\tlogOut() {\n\t\treturn this.http.get('http://localhost:3000/user/logout')\n\t\t\t.map(res => res.json());\n\t}\n\n}"],"sourceRoot":"/source/"}