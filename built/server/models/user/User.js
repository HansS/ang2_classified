var db_1 = require('../../db');
var userService = require('../../services/userService');
// user model
var Schema = db_1.default.Schema, passportLocalMongoose = require('passport-local-mongoose');
var userSchema = new Schema({
    username: String,
    email: String,
    password: String,
    status: { type: Boolean, default: true },
    created_at: { type: Date, default: Date.now() }
});
//calling path method of user schema
userSchema.path('username').validate(function (value, next) {
    userService.findUser(value, function (err, user) {
        if (err) {
            console.log(err);
            return next(false); // with false value to callback.it say valdation fail
        }
        next(!user); // otherwise we return oposite of truhtiness value of user. if user exist return false  
    });
}, 'That username is already in use');
userSchema.plugin(passportLocalMongoose);
exports.User = db_1.default.model('User', userSchema);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZGVscy91c2VyL1VzZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsbUJBQXFCLFVBQVUsQ0FBQyxDQUFBO0FBRWhDLElBQU8sV0FBVyxXQUFXLDRCQUE0QixDQUFDLENBQUM7QUFHM0QsYUFBYTtBQUNiLElBQUksTUFBTSxHQUFHLFlBQVEsQ0FBQyxNQUFNLEVBQ3hCLHFCQUFxQixHQUFHLE9BQU8sQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDO0FBRS9ELElBQUksVUFBVSxHQUFHLElBQUksTUFBTSxDQUFDO0lBQ3pCLFFBQVEsRUFBRSxNQUFNO0lBQ2hCLEtBQUssRUFBRSxNQUFNO0lBQ2IsUUFBUSxFQUFFLE1BQU07SUFDbEIsTUFBTSxFQUFFLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFO0lBQ3hDLFVBQVUsRUFBRSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksQ0FBQyxHQUFHLEVBQUUsRUFBRTtDQUMvQyxDQUFDLENBQUM7QUFFSCxvQ0FBb0M7QUFDcEMsVUFBVSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxRQUFRLENBQUMsVUFBUyxLQUFLLEVBQUUsSUFBSTtJQUN4RCxXQUFXLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRSxVQUFTLEdBQUcsRUFBRSxJQUFJO1FBQzdDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDVCxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ2pCLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxxREFBcUQ7UUFDMUUsQ0FBQztRQUNELElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFBLENBQUMsd0ZBQXdGO0lBQ3JHLENBQUMsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxFQUFFLGlDQUFpQyxDQUFDLENBQUM7QUFFdEMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO0FBRTlCLFlBQUksR0FBRyxZQUFRLENBQUMsS0FBSyxDQUFhLE1BQU0sRUFBRSxVQUFVLENBQUMsQ0FBQyIsImZpbGUiOiJtb2RlbHMvdXNlci9Vc2VyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgbW9uZ29vc2UgZnJvbSAnLi4vLi4vZGInO1xuaW1wb3J0IElVc2VyIGZyb20gJy4vSVVzZXInXG5pbXBvcnQgdXNlclNlcnZpY2UgPSByZXF1aXJlKCcuLi8uLi9zZXJ2aWNlcy91c2VyU2VydmljZScpO1xuZXhwb3J0IGludGVyZmFjZSBJVXNlck1vZGVsIGV4dGVuZHMgSVVzZXIsIG1vbmdvb3NlLkRvY3VtZW50IHsgfVxuXG4vLyB1c2VyIG1vZGVsXG52YXIgU2NoZW1hID0gbW9uZ29vc2UuU2NoZW1hLFxuICAgIHBhc3Nwb3J0TG9jYWxNb25nb29zZSA9IHJlcXVpcmUoJ3Bhc3Nwb3J0LWxvY2FsLW1vbmdvb3NlJyk7XG5cbnZhciB1c2VyU2NoZW1hID0gbmV3IFNjaGVtYSh7XG4gIFx0dXNlcm5hbWU6IFN0cmluZyxcbiAgXHRlbWFpbDogU3RyaW5nLFxuICBcdHBhc3N3b3JkOiBTdHJpbmcsXG5cdHN0YXR1czogeyB0eXBlOiBCb29sZWFuLCBkZWZhdWx0OiB0cnVlIH0sXG5cdGNyZWF0ZWRfYXQ6IHsgdHlwZTogRGF0ZSwgZGVmYXVsdDogRGF0ZS5ub3coKSB9XG59KTtcblxuLy9jYWxsaW5nIHBhdGggbWV0aG9kIG9mIHVzZXIgc2NoZW1hXG51c2VyU2NoZW1hLnBhdGgoJ3VzZXJuYW1lJykudmFsaWRhdGUoZnVuY3Rpb24odmFsdWUsIG5leHQpIHtcblx0dXNlclNlcnZpY2UuZmluZFVzZXIodmFsdWUsIGZ1bmN0aW9uKGVyciwgdXNlcikge1xuXHRcdGlmIChlcnIpIHtcblx0XHRcdGNvbnNvbGUubG9nKGVycik7XG5cdFx0XHRyZXR1cm4gbmV4dChmYWxzZSk7IC8vIHdpdGggZmFsc2UgdmFsdWUgdG8gY2FsbGJhY2suaXQgc2F5IHZhbGRhdGlvbiBmYWlsXG5cdFx0fVxuXHRcdG5leHQoIXVzZXIpIC8vIG90aGVyd2lzZSB3ZSByZXR1cm4gb3Bvc2l0ZSBvZiB0cnVodGluZXNzIHZhbHVlIG9mIHVzZXIuIGlmIHVzZXIgZXhpc3QgcmV0dXJuIGZhbHNlICBcblx0fSk7XG59LCAnVGhhdCB1c2VybmFtZSBpcyBhbHJlYWR5IGluIHVzZScpO1xuXG51c2VyU2NoZW1hLnBsdWdpbihwYXNzcG9ydExvY2FsTW9uZ29vc2UpO1xuXG5leHBvcnQgbGV0IFVzZXIgPSBtb25nb29zZS5tb2RlbDxJVXNlck1vZGVsPignVXNlcicsIHVzZXJTY2hlbWEpO1xuXG5cblxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
